name: Node.js CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  REMOTE_DIR: '/var/www/symmetrical-succotash'

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete node_modules
        run: |
          rm -rf node_modules/

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add to known hosts
        run: |
          ssh-keyscan -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection as root
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} 'echo "SSH connection successful as root"'

      # - name: Create remote directory
      #   run: |
      #     ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} << 'EOF'
      #       sudo rm -rf ${{ env.REMOTE_DIR }}
      #       sudo mkdir -p ${{ env.REMOTE_DIR }}
      #       sudo chmod 755 ${{ env.REMOTE_DIR }}
      #     EOF

      - name: Send the files to the server using rsync
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -r ./ ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }}:/

      - name: SSH and execute commands as root
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} << 'EOF'
            whoami
            echo "Login to the server successful!"
          EOF

      - name: Clean up SSH key
        run: rm -rf ~/.ssh/id_rsa
