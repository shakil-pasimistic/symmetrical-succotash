name: Node.js CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_HOST: ${{ secrets.SSH_HOST }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} for deploy
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add known hosts
        run: |
          ssh-keyscan -H ${{ env.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection as root
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} 'echo "SSH connection successful as root"'

      - name: SSH and execute commands as root
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ env.SSH_USERNAME }}@${{ env.SSH_HOST }} << 'EOF'
            whoami
            echo "Hello!"
            node -v
          EOF

      - name: Clean up SSH key
        run: rm ~/.ssh/id_rsa
# rsync -avz --no-times --exclude='node_modules' --exclude='.git' -e "ssh -o StrictHostKeyChecking=no -i private_key.pem" ./ $SSH_USERNAME@$SSH_HOST:/

# test:
#   runs-on: ubuntu-latest
#   strategy:
#     matrix:
#       node-version: [20.x]
#   steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }} for test
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run test

# build:
#   runs-on: ubuntu-latest
#   needs: test
#   strategy:
#     matrix:
#       node-version: [20.x]
#   steps:
#     - uses: actions/checkout@v2
#     - name: Use Node.js ${{ matrix.node-version }} for build
#       uses: actions/setup-node@v3
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: echo "Build the application for production deployment!"

# deploy:
# runs-on: ubuntu-latest
# strategy:
#   matrix:
#     node-version: [20.x]
# steps:
#   - uses: actions/checkout@v2
#   - name: Use Node.js ${{ matrix.node-version }} for deploy
#     uses: actions/setup-node@v3
#     with:
#       node-version: ${{ matrix.node-version }}
#       cache: 'npm'

#   - name: Prepare SSH key
#     run: |
#       echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
#       chmod 600 private_key.pem

#   - name: Deploy to the server
#     env:
#       SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#       SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
#       SSH_HOST: ${{ secrets.SSH_HOST }}
#     run: |
#       ssh-keyscan -H ${SSH_HOST} >> ~/.ssh/known_hosts
#       ssh -tt -i "private_key.pem" ${SSH_USERNAME}@${SSH_HOST} << EOF
#         whoami
#         node -v
#         echo "Hello!"
#       EOF

#   - name: Clean up SSH key
#     run: rm private_key.pem
